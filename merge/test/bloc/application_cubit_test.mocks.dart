// Mocks generated by Mockito 5.4.4 from annotations
// in merge/test/bloc/application_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:merge/core/failures/failures.dart' as _i5;
import 'package:merge/features/project/domain/application/entity/application.dart'
    as _i6;
import 'package:merge/features/project/domain/application/repository/app_repo.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IApplicationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIApplicationRepository extends _i1.Mock
    implements _i3.IApplicationRepository {
  MockIApplicationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> submitApplication(
          _i6.Application? application) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitApplication,
          [application],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #submitApplication,
            [application],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> createApplication(
          _i6.Application? application) =>
      (super.noSuchMethod(
        Invocation.method(
          #createApplication,
          [application],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #createApplication,
            [application],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> updateApplication(
          _i6.Application? application) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateApplication,
          [application],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #updateApplication,
            [application],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteApplication(
          String? applicationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteApplication,
          [applicationId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteApplication,
            [applicationId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Application?>> getApplicationById(
          String? applicationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getApplicationById,
          [applicationId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.Application?>>.value(
                _FakeEither_0<_i5.Failure, _i6.Application?>(
          this,
          Invocation.method(
            #getApplicationById,
            [applicationId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Application?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Application>>>
      getApplicationsByProjectId(String? projectId) => (super.noSuchMethod(
            Invocation.method(
              #getApplicationsByProjectId,
              [projectId],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.Application>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Application>>(
              this,
              Invocation.method(
                #getApplicationsByProjectId,
                [projectId],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Application>>>);
}
